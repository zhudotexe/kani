<|im_start|>system
You are a weather assistant. Use the provided functions to answer weather questions.

# Tools

You may call one or more functions to assist with the user query.

You are provided with function signatures within <tools></tools> XML tags:
<tools>
{"type": "function", "function": {"name": "get_forecast", "description": "Get the 3-day forecast for a location.", "parameters": {"description": "Get the 3-day forecast for a location.", "properties": {"location": {"description": "The city and state, e.g. San Francisco, CA", "type": "string"}}, "required": ["location"], "title": "get_forecast", "type": "object"}}}
{"type": "function", "function": {"name": "get_weather", "description": "Get the current weather in a given location.", "parameters": {"description": "Get the current weather in a given location.", "properties": {"location": {"description": "The city and state, e.g. San Francisco, CA", "type": "string"}, "unit": {"title": "Unit", "enum": ["fahrenheit", "celsius"], "type": "string"}}, "required": ["location", "unit"], "title": "get_weather", "type": "object"}}}
</tools>

For each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:
<tool_call>
{"name": <function-name>, "arguments": <args-json-object>}
</tool_call><|im_end|>
<|im_start|>user
What's the weather in San Francisco and New York? Report in Fahrenheit.<|im_end|>
<|im_start|>assistant
<think>

==========
tensor([[151644,   8948,    198,   2610,    525,    264,   9104,  17847,     13,   5443,    279,   3897,   5746,    311,   4226,   9104,   4755,    382,      2,  13852,    271,   2610,   1231,   1618,    825,    476,    803,   5746,    311,   7789,    448,    279,   1196,   3239,    382,   2610,    525,   3897,    448,    729,  32628,   2878,    366,  15918,   1472,  15918,     29,  11874,   9492,    510,     27,  15918,    397,   4913,   1313,    788,    330,   1688,    497,    330,   1688,    788,   5212,    606,    788,    330,    455,  35563,   3829,    497,    330,   4684,    788,    330,   1949,    279,    220,     18,  11228,  17595,    369,    264,   3728,  10465,    330,  13786,    788,   5212,   4684,    788,    330,   1949,    279,    220,     18,  11228,  17595,    369,    264,   3728,  10465,    330,  13193,    788,   5212,   2527,    788,   5212,   4684,    788,    330,    785,   3283,    323,   1584,     11,    384,   1302,     13,   5836,  12879,     11,   9183,
            497,    330,   1313,    788,    330,    917,   9207,   2137,    330,   6279,    788,   4383,   2527,   7914,    330,   2102,    788,    330,    455,  35563,   3829,    497,    330,   1313,    788,    330,   1700,  30975,    532,   4913,   1313,    788,    330,   1688,    497,    330,   1688,    788,   5212,    606,    788,    330,    455,  69364,    497,    330,   4684,    788,    330,   1949,    279,   1482,   9104,    304,    264,   2661,   3728,  10465,    330,  13786,    788,   5212,   4684,    788,    330,   1949,    279,   1482,   9104,    304,    264,   2661,   3728,  10465,    330,  13193,    788,   5212,   2527,    788,   5212,   4684,    788,    330,    785,   3283,    323,   1584,     11,    384,   1302,     13,   5836,  12879,     11,   9183,    497,    330,   1313,    788,    330,    917,  14345,    330,   3843,    788,   5212,   2102,    788,    330,   4562,    497,    330,   9018,    788,   4383,     69,  47910,    497,    330,     66,  40247,   7914,
            330,   1313,    788,    330,    917,   9207,   2137,    330,   6279,    788,   4383,   2527,    497,    330,   3843,   7914,    330,   2102,    788,    330,    455,  69364,    497,    330,   1313,    788,    330,   1700,  30975,    532,    522,  15918,   1339,   2461,   1817,    729,   1618,     11,    470,    264,   2951,   1633,    448,    729,    829,    323,   5977,   2878,    220, 151657, 151658,  11874,   9492,    510, 151657,    198,   4913,    606,    788,    366,   1688,  11494,   8066,    330,  16370,    788,    366,   2116,  56080,  40432,  31296, 151658, 151645,    198, 151644,    872,    198,   3838,    594,    279,   9104,    304,   5836,  12879,    323,   1532,   4261,     30,   8259,    304,  68723,     13, 151645,    198, 151644,  77091,    198, 151667,    198]])
==========
{'attention_mask': tensor([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         1, 1, 1, 1, 1, 1, 1, 1, 1]]),
 'max_length': 32000}